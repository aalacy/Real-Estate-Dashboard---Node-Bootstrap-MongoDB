<!doctype html>
<html lang="en">
  <head>
      <% include ../partials/head %>
  </head>
  <body>

    <input type="hidden" id="hidden_documents" value="<%= JSON.stringify(documents) %>">
    <input type="hidden" id="hidden_properties" value="<%= JSON.stringify(properties) %>">
    <!-- Modal Upload -->
    <div class="modal fade" id="modalUpload" tabindex="-1" role="dialog" aria-hidden="true">
      <div class="modal-dialog modal-lg" role="document">
        <form id="document-upload-form" method="post" action="/property/documents/upload_all" >
          <input type="hidden" name="_csrf" value="<%= token %>">
          <input type="hidden" id="status" name="document[status]" value="upload">
          <input type="hidden" id="document_id" name="document[id]" value="">
          <input type="hidden" id="document_size" name="document[size]" value="">
          <input type="hidden" id="document_mimetype" name="document[mimetype]" value="">
          <input type="hidden" id="document_filename" name="document[filename]" value="">
          <input type="hidden" id="document_path" name="document[path]" value="">
          <div class="modal-content bg-lighter">
            <div class="modal-header">
                <!-- Header -->
              <h3 class="modal-title">Upload Document</h3>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <div class="row">
                <div class="col-12 col-md-6">
                  <div class="row">
                    <div class="col-12">
                      
                      <!-- Start date -->
                      <div class="form-group">
                        <label>
                          Properties
                        </label>
                        <select class="form-control" id="document_property" name="document[property]" data-toggle="select"  data-options='{"placeholder": "Select a Property"}' required>
                          <option></option>
                        </select>  
                      </div>
                    </div>
                  </div>
                  <div class="row">
                    <div class="col-12">
                      <!-- Start date -->
                      <div class="form-group">
                        <label>
                          Unit
                        </label>
                        <select class="form-control" id="document_unit" name="document[unit]" data-toggle="select"  data-options='{"placeholder": "Select a Unit"}'>
                          <option></option>
                        </select>  
                      </div>
        
                    </div>
                   
                  </div>
                  
                </div>
                <div class="col-12 col-md-6">
                  <div class="dropzone dropzone-multiple">

                    <!-- Fallback -->
                    <div class="fallback">
                      <input type="file" class="custom-file-input" id="customFileUploadMultiple">
                    </div>

                    <div class="dz-message" data-dz-message>
                      <span class="fe fe-download" style="font-size: 2.5rem;"></span>
                      <div>Choose a file or drag it here</div>
                    </div>

                    <!-- Preview -->
                    <ul class="dz-preview dz-preview-multiple list-group list-group-lg list-group-flush">
                      <li class="list-group-item px-0">
                        <div class="row align-items-center">
                          <div class="col-auto">
                            <div class="avatar">
                              <img class="avatar-img rounded" src="..." alt="..." data-dz-thumbnail>
                            </div>
                          </div>
                          <div class="col ml-n3">
                            <h4 class="mb-1" data-dz-name>...</h4>
                            <p class="small text-muted mb-0" data-dz-size>...</p>
                          </div>
                          <div class="col-auto">
                            
                            <div class="dropdown">
                              <a href="#" class="dropdown-item" title="Remove file" data-dz-remove>
                                <i class="fe fe-trash"></i>
                              </a>
                            </div>

                          </div>
                        </div>
                      </li>
                    </ul>

                  </div>
                </div>
              </div>
              <div class="row mt-3">
                <div class="col-12 col-md-6">
                  <!-- Start date -->
                  <div class="form-group">
                    <label> Tag </label>
                    <select class="form-control" name="document[tag]" id="document_tag" multiple="multiple">
                      <option>House</option>
                    </select>
                  </div>
    
                </div>
                <div class="col-12 col-md-6">
                  <div class="form-group d-none" id="documentUploadImage">
                    <label> Original Document </label>
                    <div class="document-upload-image"></div>
                  </div>
                </div>
              </div>
              
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
              <button type="button" id="uploadDocumentBtn" class="btn btn-primary">Save Changes</button>
            </div>
          </div>
        </form>
      </div>
    </div>
    <% include ../partials/topnav %>

    <!-- MAIN CONTENT
    ================================================== -->
    <div class="main-content">

      <!-- HEADER -->
      <div class="header">
        <div class="container">
          
          <!-- Body -->
          <div class="header-body">
            <div class="row align-items-center">
              <div class="col ml-n3 ml-md-n2">

                <!-- Title -->
                <h1 class="header-title">
                  Documents
                </h1>

              </div>

              <div class="col-auto">
                  
                  <!-- Button -->
                  <a href="#" class="btn lift btn-primary modal-upload">
                    Upload
                  </a>

              </div>
            </div> <!-- / .row -->
          
          </div>

        </div>
      </div> <!-- / .header -->

      <!-- CONTENT -->
      <div class="container">
        <div class="row">
          <div class="col-12">
            
            <!-- Files -->
            <div class="card" data-toggle="lists" data-options='{"valueNames": ["name"]}'>
              <div class="card-header">
                <div class="row align-items-center">
                  <div class="col">
                    
                    <!-- Title -->
                    <h4 class="card-header-title">
                      Files
                    </h4>

                  </div>
                  <div class="col-auto">
                    
                    <!-- Dropdown -->
                    <div class="dropdown">

                      <!-- Toggle -->
                   
                      <select class="form-control" id="filterByProperty" data-toggle="select"  data-options='{"placeholder": "All Properties"}' required>
                          <option></option>
                          <option value="all">All</option>
                          <% properties.map(property => {%>
                          <option value="<%=property.id%>"><%=property.address + ', ' + property.city%></option>
                          <%})%>
                        </select>  

                    </div>
    
                  </div>
                
                </div> <!-- / .row -->
              </div>
              <div class="card-header">
                <div class="row">
                  <div class="col-12">
                    
                    <!-- Form -->
                    <form>
                      <div class="input-group input-group-flush input-group-merge">
                        <input type="search" class="form-control form-control-prepended search" placeholder="Search">
                        <div class="input-group-prepend">
                          <div class="input-group-text">
                            <span class="fe fe-search"></span>
                          </div>
                        </div>
                      </div>
                    </form>

                  </div>
                </div> <!-- / .row -->
              </div>
              <div class="card-body">

                <!-- List -->
                <ul class="list-group list-group-lg list-group-flush list my-n4" id="documentList">
                  <% if(!documents.length) { %>
                    <p class="text-center p-3">There is no any documents yet.</p>
                  <% } %>
                </ul>
                <ul id="documentPagination" class="pagination-md mt-5"></ul>
              </div>
            </div>

          </div>
        </div> <!-- / .row -->
      </div>
      
    </div> <!-- / .main-content -->

    <!-- JAVASCRIPT
    ================================================== -->
    <% include ../partials/scripts %>

    <script type="text/javascript">
      let all_items = $('#hidden_documents').val();
      let properties = $('#hidden_properties').val();
      try {
        properties = JSON.parse(properties);
      } catch(e) { properties = [];}
      let items = []
      try {
        all_items = JSON.parse(all_items);
        items = all_items;
      } catch(e) {}

      function doPopulate() {
        $('#documentList').empty();
        let page = 0; 
        items.map( (doc, idx) => {
          if (idx % 3 == 0) { 
            page = (parseInt(idx/3) + 1)
          } else {
            page = (parseInt(idx/3) + 1) + ' d-none'
          }
          const date = new Date(doc.created_at);
          const uploaded_at = date.getDate() + '/' +  date.getMonth()+1 + '/' + date.getFullYear();
          $('#documentList').append(`<li class="list-group-item px-0 page${page}">
              <div class="row align-items-center">
                <div class="col-auto">
                  
                  <!-- Avatar -->
                  <h1 class="mb-0 avatar avatar-md">
                    <img src="/img/icons/unit.png" class="avatar-img">
                  </h1>

                </div>
                <div class="col ml-n2">

                  <!-- Title -->
                  <h4 class="card-title mb-1 name">
                    <a target="_blank" href="/${doc.path}">${doc.filename}</a>
                  </h4>

                  <!-- Text -->
                  <p class="card-text small text-muted mb-1">
                    ${doc.display_name} &bull;${doc.tag}
                  </p>

                  <!-- Time -->
                  <p class="card-text small text-muted">
                    Uploaded on <time datetime="${uploaded_at}">${uploaded_at}</time>
                  </p>
                  
                </div>
                <div class="col-auto">
                  
                  <!-- Button -->
                  <a href="/${doc.path}" target="_blank" class="btn btn-sm btn-white d-none d-md-inline-block">
                    View
                  </a>

                </div>
                <div class="col-auto">
                  
                  <!-- Dropdown -->
                  <div class="dropdown">
                    <a href="#" class="dropdown-ellipses dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                      <i class="fe fe-more-vertical"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right">
                      <button class="dropdown-item edit-document modal-upload" data-id="${doc.id}" data-property_id="${doc.property_id}" data-property_name="${doc.property_name}" data-unit_id="${doc.unit_id}" data-unit_name="${doc.unit_name}" data-tag="${doc.tag}" data-path="${doc.path}" data-size="${doc.size}" data-filename="${doc.filename}" data-mimetype="${doc.mimetype}">
                        Edit
                      </button>
                      <button class="dropdown-item delete-document" data-id="${doc.id}">
                        Delete
                      </button>
                    </div>
                  </div>
                </div>
              </div> 
            </li>`);
           })
      }
      function doPaginate() {
        // $('#documentPagination').empty();
        try {
          const pageCnt = Math.ceil(items.length / 3);
          var visiblePageCnt = Math.min(3, pageCnt);
          $('#documentPagination').twbsPagination('destroy');
          $('#documentPagination').twbsPagination({
              totalPages: pageCnt,
              // the current page that show on start
              startPage: 1,
              // maximum visible pages
              visiblePages: visiblePageCnt,
              initiateStartPageClick: true,
              // template for pagination links
              href: false,
              // variable name in href template for page number
              hrefVariable: '{{number}}',
              // Text labels
              first: '<<',
              prev: 'Prev',
              next: 'Next',
              last: '>>',
              // carousel-style pagination
              loop: false,
              // callback function
              onPageClick: function (event, page) {
                $('#documentList .list-group-item').addClass('d-none');
                $('.page'+page).removeClass('d-none');
              },
              // pagination Classes
              paginationClass: 'pagination',
              nextClass: 'next',
              prevClass: 'prev',
              lastClass: 'last',
              firstClass: 'first',
              pageClass: 'page',
              activeClass: 'active',
              disabledClass: 'disabled'
          });
        } catch(e) {}
      }

      function Dropzone_init(el) {
        Dropzone.autoDiscover = false;
        Dropzone.thumbnailWidth = null;
        Dropzone.thumbnailHeight = null;

        var currentFile = undefined;
        var elementOptions = el.dataset.options;
            elementOptions = elementOptions ? JSON.parse(elementOptions) : {};
        var defaultOptions = {
          url: "/property/documents/upload?_csrf=<%=token%>",
          maxFiles: 1,
          previewsContainer: el.querySelector('.dz-preview'),
          previewTemplate: el.querySelector('.dz-preview').innerHTML,
          init: function() {
            this.on('addedfile', function(file) {
              var maxFiles = elementOptions.maxFiles;
              if (maxFiles == 1 && currentFile) {
                this.removeFile(currentFile);
              }
              currentFile = file;
            });

            this.on('removedfile', function(file){
              if ($('#status').val() == 'upload') {
                $('#document_id').val('');
              }
            });
          },
          success: function(res) {
            if (res.status == "success") {
              try {
                var mydoc = JSON.parse(res.xhr.response);
                if ($('#status').val() == 'upload') {
                  $('#document_id').val(mydoc.id);
                } else {
                  $('#document_size').val(mydoc.size);
                  $('#document_mimetype').val( mydoc.mimetype);
                  $('#document_filename').val(mydoc.filename);
                  $('#document_path').val(mydoc.path);
                }
              } catch(e) {}
            } else {
              makeToast({message: "Sorry, Something wrong happened on the server while uploading your document"});
            }
          }
        }
        var options = Object.assign(elementOptions, defaultOptions);

        // Clear preview
        el.querySelector('.dz-preview').innerHTML = '';

        // Init dropzone
        new Dropzone(el, options);
      }

      $(function(){
        doPopulate();
        doPaginate();

        if (document.querySelector('.dropzone')) {
          Dropzone_init( document.querySelector('.dropzone'));
        }

        $('#filterByProperty').on('select2:select', function (e) {
          if (e.params.data.id == 'all') {
            items = all_items;
          } else {
            items = all_items.filter(item => item.property_id == e.params.data.id);
          }
          doPopulate();
          doPaginate();
        });

        $('#document_property').on('select2:select', function (e) {
          var data = {
            property: {
              id: e.params.data.id
            }
          };
          const token = $('input[name="_csrf"]').val();
          fetch('/property/unit/all', {
              credentials: 'same-origin', // <-- includes cookies in the request
              headers: {
                  'CSRF-Token': token, 
                  'Content-Type': 'application/json'
              },
              method: 'POST',
              body: JSON.stringify(data)
          })
          .then(response => response.json())
          .then(function(res) {
            if (res.status == 200) {
              $('#document_unit').empty();
              $('#document_unit').val(null).trigger('change');
              res.units.map(unit => {
                var option = new Option(unit.description, unit.id, true, true);
                $('#document_unit').append(option);
              })
            }
          })
          .catch(error => {
              console.log(error);
          });
        });

        $('#document_tag').select2({
          tags: true,
          createTag: function (params) {
            var term = $.trim(params.term);

            if (term === '') {
              return null;
            }

            return {
              id: term,
              text: term,
              newTag: true // add additional parameters
            }
          }
        });

        $('.modal-upload').click(function(e) {
          e.preventDefault()
          $('#document_property').empty();
          properties.map(property => {
            var property_name = property.address + ', ' + property.city;
            option = new Option(property_name, property.id, true, true);
            $('#document_property').append(option);
          });
          $('#document_unit').empty();
          if ($(this).hasClass('edit-document')) {
            const unit_name = $(this).data('unit_name');
            const unit_id = $(this).data('unit_id');
            const property_id = $(this).data('property_id');
            const property_name = $(this).data('property_name');
            const tag = $(this).data('tag');
            const image = $(this).data('path');
            var option = new Option(unit_name, unit_id, true, true);
            $('#document_unit').append(option);
            $('#document_property').val(property_id).trigger('change');
            option = new Option(tag, tag, true, true);
            $('#document_tag').append(option);
            $('#document_id').val($(this).data('id'));
            $('#document_size').val($(this).data('size'));
            $('#document_path').val(image);
            $('#document_mimetype').val($(this).data('mimetype'));
            $('#document_filename').val($(this).data('filename'));
            $('#documentUploadImage').removeClass('d-none').children('div').css('background-image', `url('/${image}')`);
            $('#modalUpload .modal-title').text('Edit Document');
            $('#modalUpload #status').val('edit');
          } else {
            $('#document_property').val(null).trigger("change");
            $('#document_tag').empty();
            
            $('#document_id').val('');
            $('#documentUploadImage').addClass('d-none');
            $('#modalUpload .modal-title').text('Upload Document');
            $('#modalUpload #status').val('upload');
          }

          $('#modalUpload').modal();
        });

        $('.delete-document').click(function(e) {
          e.preventDefault();
          var self = $(this);
          confirmDialog("Are you sure?", (ans) => {
            if (ans) {
              const id = self.data('id');
              const parent = self.parents('.list-group-item');
              const token = $('meta[name="csrf"]').attr('content');
              const data = {
                  document: {
                    id 
                  }
              };
              fetch('/property/documents/delete', {
                credentials: 'same-origin', // <-- includes cookies in the request
                headers: {
                    'CSRF-Token': token, 
                    'Content-Type': 'application/json'
                },
                method: 'POST',
                body: JSON.stringify(data)
              })
              .then(response => response.json())
              .then(function(res) {
                makeToast({message: res.message});
                if (res.status == 422) {
                } else if (res.status == 200) {
                  parent.remove();
                }
              })
              .catch(error => {
                console.log(error);
              });
            }else {
              $('#modalConfirm').modal('hide');
            }
          });
        });
      });
    </script>

  </body>
</html>